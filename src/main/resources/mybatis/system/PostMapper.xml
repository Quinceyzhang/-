<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luckyframe.project.system.post.mapper.PostMapper">

	<resultMap type="Post" id="PostResult">
		<id     property="postId"        column="post_id"       />
		<result property="postCode"      column="post_code"     />
		<result property="postName"      column="post_name"     />
		<result property="postModel"      column="post_model"     />
		<result property="postFactory"      column="post_factory"     />
		<result property="postSort"      column="post_sort"     />
		<result property="status"        column="status"        />
		<result property="createBy"      column="create_by"     />
		<result property="createTime"    column="create_time"   />
		<result property="updateBy"      column="update_by"     />
		<result property="updateTime"    column="update_time"   />
		<result property="remark"        column="remark"        />
		<result property="fileName"        column="file_name"        />
	</resultMap>
	
	<resultMap type="PostParams" id="PostParamsResult">
		<result property="postId"        column="post_id"     />
		<result property="paramsId"      column="params_type_id"     />
		<result property="paramsName"    column="params_type"     />
		<result property="paramsMinValue"    column="min_value"     />
		<result property="paramsMaxValue"    column="max_value"     />
		<result property="paramsUnit"    column="params_unit"     />
	</resultMap>
	
	
	<resultMap type="PostParamsList" id="PostParamsListResult">
		<result property="postId"        column="post_id"     />
		<result property="postName"        column="post_name"     />
		<result property="paramsId"      column="params_type_id"     />
		<result property="paramsName"    column="params_type"     />
		<result property="paramsMinValue"    column="min_value"     />
		<result property="paramsMaxValue"    column="max_value"     />
		<result property="paramsUnit"    column="params_unit"     />
		<result property="flag"    column="flag"     />
	</resultMap>
	
	<resultMap type="ProjectCaseParams" id="ParamsForPostResult">
        <result property="paramsId"    column="params_id"    />
        <result property="paramsName"    column="params_name"    />
        <result property="paramsMinValue"    column="min_value"    />
        <result property="paramsMaxValue"    column="max_value"    />
        <result property="paramsUnit"    column="params_unit"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="flag"    column="flag"    />
    </resultMap>
	
	
	<sql id="selectPostParamsVo">
        select pp.post_id,sp.post_name, pp.params_type_id, pp.params_type,p.min_value,p.max_value,p.params_unit,p.remark
		from post_params pp left join sys_post sp on pp.post_id= sp.post_id left join project_case_params p on pp.params_type_id = p.params_id 
    </sql>

	<select id="selectPostParamsList" parameterType="Long" resultMap="PostParamsResult">
        <include refid="selectPostParamsVo"/>
        where pp.post_id = #{postId} 
    </select>
    
    <select id="selectAllPostList" parameterType="Integer" resultMap="PostParamsListResult">
        select pp.post_id,sp.post_name, pp.params_type_id, pp.params_type,p.min_value,p.max_value,p.params_unit,p.remark,IF(q.action_id is null,'false','true') flag
		from post_params pp left join sys_post sp on pp.post_id= sp.post_id left join project_case_params p on pp.params_type_id = p.params_id
		left join (select * from action_params where action_id=#{actionId}) q on pp.post_id=q.post_id and pp.params_type_id= q.params_id
    </select>
    
    <delete id="deletePostParams" parameterType="Long">
 		delete from post_params where post_id = #{postId}
 	</delete>
 	
 	<insert id="insertPostParams" parameterType="Postparams">
 		insert into post_params(
 			post_id,params_type_id,params_type
 		)values(
 			#{postId},#{paramsId},#{paramsName}
 		)
	</insert>
	
	<sql id="selectPostVo">
        select s.post_id,s.post_model,s.post_factory, s.post_code, s.post_name, s.post_sort, s.status, s.create_by, s.create_time, s.remark ,f.file_name
		from sys_post s left join file_index f on s.post_sort = f.id
    </sql>
	
	<select id="selectPostList" parameterType="Post" resultMap="PostResult">
	    <include refid="selectPostVo"/>
		<where>
			<if test="postCode != null and postCode != ''">
				AND s.post_code like concat('%', #{postCode}, '%')
			</if>
			<if test="postModel != null and postModel != ''">
				AND s.post_model like concat('%', #{postModel}, '%')
			</if>
			<if test="postFactory != null and postFactory != ''">
				AND s.post_factory like concat('%', #{postFactory}, '%')
			</if>
			<if test="status != null and status != ''">
				AND s.status = #{status}
			</if>
			<if test="postName != null and postName != ''">
				AND s.post_name like concat('%', #{postName}, '%')
			</if>
		</where>
		order by s.create_time desc 
	</select>
	
	<select id="selectPostAll" resultMap="PostResult">
		<include refid="selectPostVo"/>
	</select>
	
	<select id="selectPostsByUserId" parameterType="Long" resultMap="PostResult">
		SELECT p.post_id, p.post_name, p.post_code
		FROM sys_user u
			 LEFT JOIN sys_user_post up ON u.user_id = up.user_id
			 LEFT JOIN sys_post p ON up.post_id = p.post_id
		WHERE up.user_id = #{userId}
	</select>
	
	<select id="selectPostById" parameterType="Long" resultMap="PostResult">
		<include refid="selectPostVo"/>
		where s.post_id = #{postId}
	</select>
	
	<select id="checkPostNameUnique" parameterType="String" resultMap="PostResult">
		<include refid="selectPostVo"/>
		 where s.post_name=#{postName}
	</select>
	
	<select id="checkPostCodeUnique" parameterType="String" resultMap="PostResult">
		<include refid="selectPostVo"/>
		 where s.post_code=#{postCode}
	</select>
	
 	<delete id="deletePostByIds" parameterType="Long">
 		delete from sys_post where post_id in
 		<foreach collection="array" item="postId" open="(" separator="," close=")">
 			#{postId}
        </foreach> 
 	</delete>
 	
 	<update id="updatePost" parameterType="Post">
 		update sys_post
 		<set>
 			<if test="postCode != null and postCode != ''">post_code = #{postCode},</if>
 			<if test="postName != null and postName != ''">post_name = #{postName},</if>
 			<if test="postModel != null and postModel != ''">post_model = #{postModel},</if>
 			<if test="postFactory != null and postFactory != ''">post_factory = #{postFactory},</if>
 			<if test="postSort != null and postSort != ''">post_sort = #{postSort},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where post_id = #{postId}
	</update>
 	
 	<insert id="insertPost" parameterType="Post" useGeneratedKeys="true" keyProperty="postId">
 		insert into sys_post(
 			<if test="postId != null and postId != 0">post_id,</if>
 			<if test="postCode != null and postCode != ''">post_code,</if>
 			<if test="postName != null and postName != ''">post_name,</if>
 			<if test="postModel != null and postModel != ''">post_model,</if>
 			<if test="postFactory != null and postFactory != ''">post_factory,</if>
 			<if test="postSort != null and postSort != ''">post_sort,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="postId != null and postId != 0">#{postId},</if>
 			<if test="postCode != null and postCode != ''">#{postCode},</if>
 			<if test="postName != null and postName != ''">#{postName},</if>
 			<if test="postModel != null and postModel != ''">#{postModel},</if>
 			<if test="postFactory != null and postFactory != ''">#{postFactory},</if>
 			<if test="postSort != null and postSort != ''">#{postSort},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>
	
	<select id="selectParamsListForPost" parameterType="Long" resultMap="ParamsForPostResult">
		select p.params_id,p.params_name,p.params_unit,IF(q.post_id is null,'false','true') flag
		from project_case_params p 
		left join (select * from post_params where post_id=#{postId}) q on p.params_id=q.params_type_id
	</select>
	
	<select id="postIsOccupy" parameterType="String" resultType="java.util.HashMap">
    	select CAST(count(id) AS CHAR(16)) count from action_params  where post_id = #{postId}
    </select>
</mapper> 